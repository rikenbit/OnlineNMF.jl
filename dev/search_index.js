var documenterSearchIndex = {"docs":
[{"location":"commandline/#OnlineNMF.jl-(Command-line-tool)","page":"Command line Tool","title":"OnlineNMF.jl (Command line tool)","text":"","category":"section"},{"location":"commandline/","page":"Command line Tool","title":"Command line Tool","text":"All functions can be performed as command line tool in shell window and same options in OnlineNMF.jl (Julia API) are available.","category":"page"},{"location":"commandline/","page":"Command line Tool","title":"Command line Tool","text":"After installation of OnlineNMF.jl, command line tools are saved at YOUR_HOME_DIR/.julia/v1.x/OnlineNMF/bin/.","category":"page"},{"location":"commandline/","page":"Command line Tool","title":"Command line Tool","text":"The functions can be performed as below.","category":"page"},{"location":"commandline/#Non-negative-Matrix-Factorization-(NMF)","page":"Command line Tool","title":"Non-negative Matrix Factorization (NMF)","text":"","category":"section"},{"location":"commandline/","page":"Command line Tool","title":"Command line Tool","text":"shell> julia YOUR_HOME_DIR/.julia/v1.x/OnlineNMF/bin/nmf \\\n--input Data.zst \\\n--outdir OUTDIR \\\n--alpha 1 \\\n--beta 2 \\\n--graphv 1.0e-8 \\\n--l1u 1.0e-8 \\\n--l1v 1.0e-8 \\\n--l2u 1.0e-8 \\\n--l2v 1.0e-8 \\\n--dim 3 \\\n--numepoch 5 \\\n--chunksize 1 \\\n--algorithm frobenius \\\n--lower 0 \\\n--upper 1.0f+38 \\\n--initU U.csv \\\n--initV V.csv \\\n--initL L.csv \\\n--logdir OUTDIR","category":"page"},{"location":"commandline/#Discretized-Non-negative-Matrix-Factorization-(DNMF)","page":"Command line Tool","title":"Discretized Non-negative Matrix Factorization (DNMF)","text":"","category":"section"},{"location":"commandline/","page":"Command line Tool","title":"Command line Tool","text":"shell> julia YOUR_HOME_DIR/.julia/v1.x/OnlineNMF/bin/dnmf \\\n--input Data.zst \\\n--outdir OUTDIR \\\n--beta 2 \\\n--binu 1.0e-8 \\\n--binv 1.0e-8 \\\n--teru 1.0e-8 \\\n--terv 1.0e-8 \\\n--graphv 1.0e-8 \\\n--l1u 1.0e-8 \\\n--l1v 1.0e-8 \\\n--l2u 1.0e-8 \\\n--l2v 1.0e-8 \\\n--dim 3 \\\n--numepoch 5 \\\n--chunksize 1 \\\n--lower 0 \\\n--upper 1.0f+38 \\\n--initU U.csv \\\n--initV V.csv \\\n--initL L.csv \\\n--logdir OUTDIR","category":"page"},{"location":"commandline/#Sparse-Non-negative-Matrix-Factorization-(SNMF)","page":"Command line Tool","title":"Sparse Non-negative Matrix Factorization (SNMF)","text":"","category":"section"},{"location":"commandline/","page":"Command line Tool","title":"Command line Tool","text":"shell> julia YOUR_HOME_DIR/.julia/v1.x/OnlineNMF/bin/sparse_nmf \\\n--input Data.mtx.zst \\\n--outdir OUTDIR \\\n--alpha 1 \\\n--beta 2 \\\n--graphv 1.0e-8 \\\n--l1u 1.0e-8 \\\n--l1v 1.0e-8 \\\n--l2u 1.0e-8 \\\n--l2v 1.0e-8 \\\n--dim 3 \\\n--numepoch 5 \\\n--chunksize 1 \\\n--algorithm frobenius \\\n--lower 0 \\\n--upper 1.0f+38 \\\n--initU U.csv \\\n--initV V.csv \\\n--initL L.csv \\\n--logdir OUTDIR","category":"page"},{"location":"commandline/#Sparse-Discretized-Non-negative-Matrix-Factorization-(SDNMF)","page":"Command line Tool","title":"Sparse Discretized Non-negative Matrix Factorization (SDNMF)","text":"","category":"section"},{"location":"commandline/","page":"Command line Tool","title":"Command line Tool","text":"shell> julia YOUR_HOME_DIR/.julia/v1.x/OnlineNMF/bin/sparse_dnmf \\\n--input Data.mtx.zst \\\n--outdir OUTDIR \\\n--beta 2 \\\n--binu 1.0e-8 \\\n--binv 1.0e-8 \\\n--teru 1.0e-8 \\\n--terv 1.0e-8 \\\n--graphv 1.0e-8 \\\n--l1u 1.0e-8 \\\n--l1v 1.0e-8 \\\n--l2u 1.0e-8 \\\n--l2v 1.0e-8 \\\n--dim 3 \\\n--numepoch 5 \\\n--chunksize 1 \\\n--lower 0 \\\n--upper 1.0f+38 \\\n--initU U.csv \\\n--initV V.csv \\\n--initL L.csv \\\n--logdir OUTDIR","category":"page"},{"location":"commandline/#Binary-COO-Non-negative-Matrix-Factorization-(BinCOONMF)","page":"Command line Tool","title":"Binary COO Non-negative Matrix Factorization (BinCOONMF)","text":"","category":"section"},{"location":"commandline/","page":"Command line Tool","title":"Command line Tool","text":"shell> julia YOUR_HOME_DIR/.julia/v1.x/OnlineNMF/bin/bincoo_nmf \\\n--input Data.bincoo.zst \\\n--outdir OUTDIR \\\n--alpha 1 \\\n--beta 2 \\\n--graphv 1.0e-8 \\\n--l1u 1.0e-8 \\\n--l1v 1.0e-8 \\\n--l2u 1.0e-8 \\\n--l2v 1.0e-8 \\\n--dim 3 \\\n--numepoch 5 \\\n--chunksize 1 \\\n--algorithm frobenius \\\n--lower 0 \\\n--upper 1.0f+38 \\\n--initU U.csv \\\n--initV V.csv \\\n--initL L.csv \\\n--logdir OUTDIR","category":"page"},{"location":"commandline/#Binary-COO-Discretized-Non-negative-Matrix-Factorization-(BinCOODNMF)","page":"Command line Tool","title":"Binary COO Discretized Non-negative Matrix Factorization (BinCOODNMF)","text":"","category":"section"},{"location":"commandline/","page":"Command line Tool","title":"Command line Tool","text":"shell> julia YOUR_HOME_DIR/.julia/v1.x/OnlineNMF/bin/bincoo_dnmf \\\n--input Data.bincoo.zst \\\n--outdir OUTDIR \\\n--beta 2 \\\n--binu 1.0e-8 \\\n--binv 1.0e-8 \\\n--teru 1.0e-8 \\\n--terv 1.0e-8 \\\n--graphv 1.0e-8 \\\n--l1u 1.0e-8 \\\n--l1v 1.0e-8 \\\n--l2u 1.0e-8 \\\n--l2v 1.0e-8 \\\n--dim 3 \\\n--numepoch 5 \\\n--chunksize 1 \\\n--lower 0 \\\n--upper 1.0f+38 \\\n--initU U.csv \\\n--initV V.csv \\\n--initL L.csv \\\n--logdir OUTDIR","category":"page"},{"location":"#OnlineNMF.jl-Documentation","page":"Home","title":"OnlineNMF.jl Documentation","text":"","category":"section"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"OnlineNMF.jl binarizes CSV file, summarizes the information of data matrix and, performs some online-NMF functions for extreamly large scale matrix in an out-of-core manner without loading whole data on memory space.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Online NMF methods are performed as following two steps.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Step.1 Binarization : We asssume that the data is matrix filled in integar count value and saved as comma-separated CSV, Matrix Market (MM), or Binary COO (BinCOO) file. Using OnlinePCA package, These files are converted to Julia binary file by csv2bin, mm2bin or bincoo2bin, respectively. This step extremely accelerates I/O speed. \nStep.2 Online NMF : nmf and dnmf can be perfomed against the binary file generated by csv2bin. sparse_nmf and sparse_dnmf can be perfomed against the binary file generated by mm2bin. bincoo_nmf and bincoo_dnmf can be perfomed against the binary file generated by bincoo2bin.","category":"page"},{"location":"","page":"Home","title":"Home","text":"All programs are available as Julia API (OnlineNMF.jl (Julia API)) and command line tool (OnlineNMF.jl (Command line tool)).","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: Overview of OnlineNMF.jl)","category":"page"},{"location":"#Reference","page":"Home","title":"Reference","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Multiplicative Update (MU)\nAlpha-divergence: Cichocki, A. et al., 2008\nAlpha=2 : Pearson divergence-based NMF\nAlpha=0 or 1 : Kullback–Leibler (KL) divergence-based NMF\nAlpha=0.5 : Hellinger divergence-based NMF\nBeta-divergence: Févotte, C. et al., 2011, Nakano, M. et al., 2010\nBeta=2 : Euclidean distance-based NMF with Gaussian distribution\nBeta=1 : Kullback–Leibler divergence-based NMF with Poisson distribution\nBeta=0 : Itakura-Saito divergence-based NMF with Gamma distribution\nDiscretized Non-negative Matrix Factorization (DNMF): Koki Tsuyuzaki, 2023","category":"page"},{"location":"juliaapi/#OnlineNMF.jl-(Julia-API)","page":"Julia API","title":"OnlineNMF.jl (Julia API)","text":"","category":"section"},{"location":"juliaapi/#Non-negative-Matrix-Factorization-(NMF)","page":"Julia API","title":"Non-negative Matrix Factorization (NMF)","text":"","category":"section"},{"location":"juliaapi/","page":"Julia API","title":"Julia API","text":"nmf(;input::AbstractString=\"\", outdir::Union{Nothing,AbstractString}=nothing, alpha::Number=1, beta::Number=2, graphv::Number=0, l1u::Number=eps(Float32), l1v::Number=eps(Float32), l2u::Number=eps(Float32), l2v::Number=eps(Float32), dim::Number=3, numepoch::Number=5, chunksize::Number=1, algorithm::AbstractString=\"frobenius\", lower::Number=0, upper::Number=1.0f+38, initU::Union{Nothing,AbstractString}=nothing, initV::Union{Nothing,AbstractString}=nothing, initL::Union{Nothing,AbstractString}=nothing, logdir::Union{Nothing,AbstractString}=nothing)","category":"page"},{"location":"juliaapi/#OnlineNMF.nmf-Tuple{}","page":"Julia API","title":"OnlineNMF.nmf","text":"nmf(;input::AbstractString=\"\", outdir::Union{Nothing,AbstractString}=nothing, alpha::Number=1, beta::Number=2, graphv::Number=0, l1u::Number=eps(Float32), l1v::Number=eps(Float32), l2u::Number=eps(Float32), l2v::Number=eps(Float32), dim::Number=3, numepoch::Number=5, chunksize::Number=1, algorithm::AbstractString=\"frobenius\", lower::Number=0, upper::Number=1.0f+38, initU::Union{Nothing,AbstractString}=nothing, initV::Union{Nothing,AbstractString}=nothing, initL::Union{Nothing,AbstractString}=nothing, logdir::Union{Nothing,AbstractString}=nothing)\n\nNon-negative Matrix Factorization (NMF).\n\nInput Arguments\n\ninput : Julia Binary file generated by OnlinePCA.csv2bin function.\noutdir : The directory user want to save the result.\nalpha : The parameter of Alpha-divergence.\nbeta : The parameter of Beta-divergence.\ngraphv : Graph regularization parameter for the factor matrix V.\nl1u : L1-regularization parameter for the factor matrix U.\nl1v : L1-regularization parameter for the factor matrix V.\nl2u : L2-regularization parameter for the factor matrix U.\nl2v : L2-regularization parameter for the factor matrix V.\ndim : The number of dimension of NMF.\nnumepoch : The number of epochs.\n`chunksize: The number of rows reading at once (e.g. 5000).\nalgorithm: Update Algorithm. frobenius, kl, is, pearson, hellinger, neyman, alpha, and beta are available.\nlower : Stopping Criteria (When the relative change of error is below this value, the calculation is terminated).\nupper : Stopping Criteria (When the relative change of error is above this value, the calculation is terminated).\ninitU : The CSV file saving the initial values of factor matrix U.\ninitV : The CSV file saving the initial values of factor matrix V.\ninitL : The CSV file saving the initial values of graph laplacian L.\nlogdir : The directory where intermediate files are saved in every epoch.\n\nOutput Arguments\n\nU : Factor matrix (No. rows of the data matrix × dim)\nV : Factor matrix (No. columns of the data matrix × dim)\nstop : Whether the calculation is converged\n\n\n\n\n\n","category":"method"},{"location":"juliaapi/#Discretized-Non-negative-Matrix-Factorization-(DNMF)","page":"Julia API","title":"Discretized Non-negative Matrix Factorization (DNMF)","text":"","category":"section"},{"location":"juliaapi/","page":"Julia API","title":"Julia API","text":"dnmf(;input::AbstractString=\"\", outdir::Union{Nothing,AbstractString}=nothing, beta::Number=2, binu::Number=eps(Float32), binv::Number=eps(Float32), teru::Number=eps(Float32), terv::Number=eps(Float32), graphv::Number=0, l1u::Number=eps(Float32), l1v::Number=eps(Float32), l2u::Number=eps(Float32), l2v::Number=eps(Float32), dim::Number=3, numepoch::Number=5, chunksize::Number=1, lower::Number=0, upper::Number=1.0f+38, initU::Union{Nothing,AbstractString}=nothing, initV::Union{Nothing,AbstractString}=nothing, initL::Union{Nothing,AbstractString}=nothing, logdir::Union{Nothing,AbstractString}=nothing)","category":"page"},{"location":"juliaapi/#OnlineNMF.dnmf-Tuple{}","page":"Julia API","title":"OnlineNMF.dnmf","text":"dnmf(;input::AbstractString=\"\", outdir::Union{Nothing,AbstractString}=nothing, beta::Number=2, binu::Number=eps(Float32), binv::Number=eps(Float32), teru::Number=eps(Float32), terv::Number=eps(Float32), graphv::Number=0, l1u::Number=eps(Float32), l1v::Number=eps(Float32), l2u::Number=eps(Float32), l2v::Number=eps(Float32), dim::Number=3, numepoch::Number=5, chunksize::Number=1, lower::Number=0, upper::Number=1.0f+38, initU::Union{Nothing,AbstractString}=nothing, initV::Union{Nothing,AbstractString}=nothing, initL::Union{Nothing,AbstractString}=nothing, logdir::Union{Nothing,AbstractString}=nothing)\n\nDiscretized Non-negative Matrix Factorization (DNMF).\n\nInput Arguments\n\ninput : Julia Binary file generated by OnlinePCA.mm2bin function.\noutdir : The directory user want to save the result.\nbeta : The parameter of Beta-divergence.\nbinu : Binary {0,1} regularization parameter for the factor matrix U.\nbinv : Binary {0,1} regularization parameter for the factor matrix V.\nteru : Ternary {0,1,2} regularization parameter for the factor matrix U.\nterv : Ternary {0,1,2} regularization parameter for the factor matrix V.\ngraphv : Graph regularization parameter for the factor matrix V.\nl1u : L1-regularization parameter for the factor matrix U.\nl1v : L1-regularization parameter for the factor matrix V.\nl2u : L2-regularization parameter for the factor matrix U.\nl2v : L2-regularization parameter for the factor matrix V.\ndim : The number of dimension of NMF.\nnumepoch : The number of epochs.\n`chunksize: The number of rows reading at once (e.g. 5000).\nlower : Stopping Criteria (When the relative change of error is below this value, the calculation is terminated)\nupper : Stopping Criteria (When the relative change of error is above this value, the calculation is terminated)\ninitU : The CSV file saving the initial values of factor matrix U.\ninitV : The CSV file saving the initial values of factor matrix V.\ninitL : The CSV file saving the initial values of graph laplacian L.\nlogdir : The directory where intermediate files are saved, in every epoch.\n\nOutput Arguments\n\nU : Factor matrix (No. rows of the data matrix × dim)\nV : Factor matrix (No. columns of the data matrix × dim)\nstop : Whether the calculation is converged\n\n\n\n\n\n","category":"method"},{"location":"juliaapi/#Sparse-Non-negative-Matrix-Factorization-(SNMF)","page":"Julia API","title":"Sparse Non-negative Matrix Factorization (SNMF)","text":"","category":"section"},{"location":"juliaapi/","page":"Julia API","title":"Julia API","text":"sparse_nmf(;input::AbstractString=\"\", outdir::Union{Nothing,AbstractString}=nothing, alpha::Number=1, beta::Number=2, graphv::Number=0, l1u::Number=eps(Float32), l1v::Number=eps(Float32), l2u::Number=eps(Float32), l2v::Number=eps(Float32), dim::Number=3, numepoch::Number=5, chunksize::Number=1, algorithm::AbstractString=\"frobenius\", lower::Number=0, upper::Number=1.0f+38, initU::Union{Nothing,AbstractString}=nothing, initV::Union{Nothing,AbstractString}=nothing, initL::Union{Nothing,AbstractString}=nothing, logdir::Union{Nothing,AbstractString}=nothing)","category":"page"},{"location":"juliaapi/#OnlineNMF.sparse_nmf-Tuple{}","page":"Julia API","title":"OnlineNMF.sparse_nmf","text":"sparse_nmf(;input::AbstractString=\"\", outdir::Union{Nothing,AbstractString}=nothing, alpha::Number=1, beta::Number=2, graphv::Number=0, l1u::Number=eps(Float32), l1v::Number=eps(Float32), l2u::Number=eps(Float32), l2v::Number=eps(Float32), dim::Number=3, numepoch::Number=5, chunksize::Number=1, algorithm::AbstractString=\"frobenius\", lower::Number=0, upper::Number=1.0f+38, initU::Union{Nothing,AbstractString}=nothing, initV::Union{Nothing,AbstractString}=nothing, initL::Union{Nothing,AbstractString}=nothing, logdir::Union{Nothing,AbstractString}=nothing)\n\nSparse Non-negative Matrix Factorization (SNMF).\n\nInput Arguments\n\ninput : Julia Binary file generated by OnlinePCA.mm2bin function.\noutdir : The directory user want to save the result.\nalpha : The parameter of Alpha-divergence.\nbeta : The parameter of Beta-divergence.\ngraphv : Graph regularization parameter for the factor matrix V.\nl1u : L1-regularization parameter for the factor matrix U.\nl1v : L1-regularization parameter for the factor matrix V.\nl2u : L2-regularization parameter for the factor matrix U.\nl2v : L2-regularization parameter for the factor matrix V.\ndim : The number of dimension of NMF.\nnumepoch : The number of epochs.\n`chunksize: The number of rows reading at once (e.g. 5000).\nalgorithm: Update Algorithm. frobenius, kl, is, pearson, hellinger, neyman, alpha, and beta are available.\nlower : Stopping Criteria (When the relative change of error is below this value, the calculation is terminated).\nupper : Stopping Criteria (When the relative change of error is above this value, the calculation is terminated).\ninitU : The CSV file saving the initial values of factor matrix U.\ninitV : The CSV file saving the initial values of factor matrix V.\ninitL : The CSV file saving the initial values of graph laplacian L.\nlogdir : The directory where intermediate files are saved in every epoch.\n\nOutput Arguments\n\nU : Factor matrix (No. rows of the data matrix × dim)\nV : Factor matrix (No. columns of the data matrix × dim)\nstop : Whether the calculation is converged\n\n\n\n\n\n","category":"method"},{"location":"juliaapi/#Sparse-Discretized-Non-negative-Matrix-Factorization-(SDNMF)","page":"Julia API","title":"Sparse Discretized Non-negative Matrix Factorization (SDNMF)","text":"","category":"section"},{"location":"juliaapi/","page":"Julia API","title":"Julia API","text":"sparse_dnmf(;input::AbstractString=\"\", outdir::Union{Nothing,AbstractString}=nothing, beta::Number=2, binu::Number=eps(Float32), binv::Number=eps(Float32), teru::Number=eps(Float32), terv::Number=eps(Float32), graphv::Number=0, l1u::Number=eps(Float32), l1v::Number=eps(Float32), l2u::Number=eps(Float32), l2v::Number=eps(Float32), dim::Number=3, numepoch::Number=5, chunksize::Number=1, lower::Number=0, upper::Number=1.0f+38, initU::Union{Nothing,AbstractString}=nothing, initV::Union{Nothing,AbstractString}=nothing, initL::Union{Nothing,AbstractString}=nothing, logdir::Union{Nothing,AbstractString}=nothing)","category":"page"},{"location":"juliaapi/#OnlineNMF.sparse_dnmf-Tuple{}","page":"Julia API","title":"OnlineNMF.sparse_dnmf","text":"sparse_dnmf(;input::AbstractString=\"\", outdir::Union{Nothing,AbstractString}=nothing, beta::Number=2, binu::Number=eps(Float32), binv::Number=eps(Float32), teru::Number=eps(Float32), terv::Number=eps(Float32), graphv::Number=0, l1u::Number=eps(Float32), l1v::Number=eps(Float32), l2u::Number=eps(Float32), l2v::Number=eps(Float32), dim::Number=3, numepoch::Number=5, chunksize::Number=1, lower::Number=0, upper::Number=1.0f+38, initU::Union{Nothing,AbstractString}=nothing, initV::Union{Nothing,AbstractString}=nothing, initL::Union{Nothing,AbstractString}=nothing, logdir::Union{Nothing,AbstractString}=nothing)\n\nSparse Discretized Non-negative Matrix Factorization (SDNMF).\n\nInput Arguments\n\ninput : Julia Binary file generated by OnlinePCA.mm2bin function.\noutdir : The directory user want to save the result.\nbeta : The parameter of Beta-divergence.\nbinu : Binary {0,1} regularization parameter for the factor matrix U.\nbinv : Binary {0,1} regularization parameter for the factor matrix V.\nteru : Ternary {0,1,2} regularization parameter for the factor matrix U.\nterv : Ternary {0,1,2} regularization parameter for the factor matrix V.\ngraphv : Graph regularization parameter for the factor matrix V.\nl1u : L1-regularization parameter for the factor matrix U.\nl1v : L1-regularization parameter for the factor matrix V.\nl2u : L2-regularization parameter for the factor matrix U.\nl2v : L2-regularization parameter for the factor matrix V.\ndim : The number of dimension of NMF.\nnumepoch : The number of epochs.\n`chunksize: The number of rows reading at once (e.g. 5000).\nlower : Stopping Criteria (When the relative change of error is below this value, the calculation is terminated)\nupper : Stopping Criteria (When the relative change of error is above this value, the calculation is terminated)\ninitU : The CSV file saving the initial values of factor matrix U.\ninitV : The CSV file saving the initial values of factor matrix V.\ninitL : The CSV file saving the initial values of graph laplacian L.\nlogdir : The directory where intermediate files are saved, in every epoch.\n\nOutput Arguments\n\nU : Factor matrix (No. rows of the data matrix × dim)\nV : Factor matrix (No. columns of the data matrix × dim)\nstop : Whether the calculation is converged\n\n\n\n\n\n","category":"method"},{"location":"juliaapi/#BinCOO-Non-negative-Matrix-Factorization-(BinCOONMF)","page":"Julia API","title":"BinCOO Non-negative Matrix Factorization (BinCOONMF)","text":"","category":"section"},{"location":"juliaapi/","page":"Julia API","title":"Julia API","text":"bincoo_nmf(;input::AbstractString=\"\", outdir::Union{Nothing,AbstractString}=nothing, alpha::Number=1, beta::Number=2, graphv::Number=0, l1u::Number=eps(Float32), l1v::Number=eps(Float32), l2u::Number=eps(Float32), l2v::Number=eps(Float32), dim::Number=3, numepoch::Number=5, chunksize::Number=1, algorithm::AbstractString=\"frobenius\", lower::Number=0, upper::Number=1.0f+38, initU::Union{Nothing,AbstractString}=nothing, initV::Union{Nothing,AbstractString}=nothing, initL::Union{Nothing,AbstractString}=nothing, logdir::Union{Nothing,AbstractString}=nothing)","category":"page"},{"location":"juliaapi/#OnlineNMF.bincoo_nmf-Tuple{}","page":"Julia API","title":"OnlineNMF.bincoo_nmf","text":"bincoo_nmf(;input::AbstractString=\"\", outdir::Union{Nothing,AbstractString}=nothing, alpha::Number=1, beta::Number=2, graphv::Number=0, l1u::Number=eps(Float32), l1v::Number=eps(Float32), l2u::Number=eps(Float32), l2v::Number=eps(Float32), dim::Number=3, numepoch::Number=5, chunksize::Number=1, algorithm::AbstractString=\"frobenius\", lower::Number=0, upper::Number=1.0f+38, initU::Union{Nothing,AbstractString}=nothing, initV::Union{Nothing,AbstractString}=nothing, initL::Union{Nothing,AbstractString}=nothing, logdir::Union{Nothing,AbstractString}=nothing)\n\nSparse Non-negative Matrix Factorization (SNMF).\n\nInput Arguments\n\ninput : Julia Binary file generated by OnlinePCA.mm2bin function.\noutdir : The directory user want to save the result.\nalpha : The parameter of Alpha-divergence.\nbeta : The parameter of Beta-divergence.\ngraphv : Graph regularization parameter for the factor matrix V.\nl1u : L1-regularization parameter for the factor matrix U.\nl1v : L1-regularization parameter for the factor matrix V.\nl2u : L2-regularization parameter for the factor matrix U.\nl2v : L2-regularization parameter for the factor matrix V.\ndim : The number of dimension of NMF.\nnumepoch : The number of epochs.\n`chunksize: The number of rows reading at once (e.g. 5000).\nalgorithm: Update Algorithm. frobenius, kl, is, pearson, hellinger, neyman, alpha, and beta are available.\nlower : Stopping Criteria (When the relative change of error is below this value, the calculation is terminated).\nupper : Stopping Criteria (When the relative change of error is above this value, the calculation is terminated).\ninitU : The CSV file saving the initial values of factor matrix U.\ninitV : The CSV file saving the initial values of factor matrix V.\ninitL : The CSV file saving the initial values of graph laplacian L.\nlogdir : The directory where intermediate files are saved in every epoch.\n\nOutput Arguments\n\nU : Factor matrix (No. rows of the data matrix × dim)\nV : Factor matrix (No. columns of the data matrix × dim)\nstop : Whether the calculation is converged\n\n\n\n\n\n","category":"method"},{"location":"juliaapi/#BinCOO-Discretized-Non-negative-Matrix-Factorization-(BinCOODNMF)","page":"Julia API","title":"BinCOO Discretized Non-negative Matrix Factorization (BinCOODNMF)","text":"","category":"section"},{"location":"juliaapi/","page":"Julia API","title":"Julia API","text":"bincoo_dnmf(;input::AbstractString=\"\", outdir::Union{Nothing,AbstractString}=nothing, beta::Number=2, binu::Number=eps(Float32), binv::Number=eps(Float32), teru::Number=eps(Float32), terv::Number=eps(Float32), graphv::Number=0, l1u::Number=eps(Float32), l1v::Number=eps(Float32), l2u::Number=eps(Float32), l2v::Number=eps(Float32), dim::Number=3, numepoch::Number=5, chunksize::Number=1, lower::Number=0, upper::Number=1.0f+38, initU::Union{Nothing,AbstractString}=nothing, initV::Union{Nothing,AbstractString}=nothing, initL::Union{Nothing,AbstractString}=nothing, logdir::Union{Nothing,AbstractString}=nothing)","category":"page"},{"location":"juliaapi/#OnlineNMF.bincoo_dnmf-Tuple{}","page":"Julia API","title":"OnlineNMF.bincoo_dnmf","text":"bincoo_dnmf(;input::AbstractString=\"\", outdir::Union{Nothing,AbstractString}=nothing, beta::Number=2, binu::Number=eps(Float32), binv::Number=eps(Float32), teru::Number=eps(Float32), terv::Number=eps(Float32), graphv::Number=0, l1u::Number=eps(Float32), l1v::Number=eps(Float32), l2u::Number=eps(Float32), l2v::Number=eps(Float32), dim::Number=3, numepoch::Number=5, chunksize::Number=1, lower::Number=0, upper::Number=1.0f+38, initU::Union{Nothing,AbstractString}=nothing, initV::Union{Nothing,AbstractString}=nothing, initL::Union{Nothing,AbstractString}=nothing, logdir::Union{Nothing,AbstractString}=nothing)\n\nSparse Discretized Non-negative Matrix Factorization (SDNMF).\n\nInput Arguments\n\ninput : Julia Binary file generated by OnlinePCA.mm2bin function.\noutdir : The directory user want to save the result.\nbeta : The parameter of Beta-divergence.\nbinu : Binary {0,1} regularization parameter for the factor matrix U.\nbinv : Binary {0,1} regularization parameter for the factor matrix V.\nteru : Ternary {0,1,2} regularization parameter for the factor matrix U.\nterv : Ternary {0,1,2} regularization parameter for the factor matrix V.\ngraphv : Graph regularization parameter for the factor matrix V.\nl1u : L1-regularization parameter for the factor matrix U.\nl1v : L1-regularization parameter for the factor matrix V.\nl2u : L2-regularization parameter for the factor matrix U.\nl2v : L2-regularization parameter for the factor matrix V.\ndim : The number of dimension of NMF.\nnumepoch : The number of epochs.\n`chunksize: The number of rows reading at once (e.g. 5000).\nlower : Stopping Criteria (When the relative change of error is below this value, the calculation is terminated)\nupper : Stopping Criteria (When the relative change of error is above this value, the calculation is terminated)\ninitU : The CSV file saving the initial values of factor matrix U.\ninitV : The CSV file saving the initial values of factor matrix V.\ninitL : The CSV file saving the initial values of graph laplacian L.\nlogdir : The directory where intermediate files are saved, in every epoch.\n\nOutput Arguments\n\nU : Factor matrix (No. rows of the data matrix × dim)\nV : Factor matrix (No. columns of the data matrix × dim)\nstop : Whether the calculation is converged\n\n\n\n\n\n","category":"method"},{"location":"juliaapi/#Graph-Laplacian-(L-D-A,-where-D-is-a-degree-matrix-and-A-is-an-adjacent-matrix).","page":"Julia API","title":"Graph Laplacian (L = D - A, where D is a degree matrix and A is an adjacent matrix).","text":"","category":"section"},{"location":"juliaapi/","page":"Julia API","title":"Julia API","text":"graph_laplacian(A::AbstractArray, norm::Bool=true)","category":"page"},{"location":"juliaapi/#OnlineNMF.graph_laplacian","page":"Julia API","title":"OnlineNMF.graph_laplacian","text":"graph_laplacian(A::AbstractArray, norm::Bool=true)\n\nGraph Laplacian (L = D - A, where D is a degree matrix and A is an adjacent matrix).\n\nInput Arguments\n\nA : A symmetric numerical matrix.\nnorm : Whether to normalize the graph Laplacian or not.\n\nOutput Arguments\n\nGraph Laplacian Matrix (No. rows/columns of A × No. rows/columns of A)\n\n\n\n\n\n","category":"function"}]
}
